<?xml version="1.0"?>

<project name="build-test">

   <property name="initialcontext.factory.bea"
            value="weblogic.jndi.WLInitialContextFactory"/>

   <target name="check-database-settings"/>
   <target name="bea-set-properties"/>

    <path id="test.classpath">
        <pathelement path="${build.dir}/classes"/>
        <path refid="default.classpath"/>
    </path>

    <path id="test.runtime.classpath">
        <pathelement path="${build.dir}/test-classes"/>
        <pathelement path="${build.dir}/instrumented-classes"/>
        <path refid="test.classpath"/>
    </path>

   <!-- =================================================================== -->
   <!-- TEST SECTION                                                        -->
   <!-- =================================================================== -->
    <!-- =================================================================== -->
    <!-- run Xdoclet for all Beans                                           -->
    <!-- =================================================================== -->
    <target name="test-ejbdoclet"
        depends="prepare, test-ejbdoclet-uptodatecheck, test-ejbdoclet-nodeps"/>
    <target name="test-ejbdoclet-uptodatecheck">
        <uptodate property="test-ejbdoclet.uptodate"
                  targetfile="${build.dir}/test-deploymentdescriptors/ejb-jar.xml" >
            <srcfiles dir="${base.dir}/test/java">
                <include name="**/*Bean.java" />
                <exclude name="**/*MBean.java" />
            </srcfiles>
            <srcfiles dir="${build.dir}/gen-test">
                <include name="**/*Bean.java" />
                <exclude name="**/*MBean.java" />
            </srcfiles>
        </uptodate>
    </target>
    <target name="test-ejbdoclet-nodeps" unless="test-ejbdoclet.uptodate">
        <xdoclet-ejb
            destdir="${build.dir}/gen-test"
            dd-dir="${build.dir}/test-deploymentdescriptors">
            <sources>
                <fileset dir="${base.dir}/test/java">
                    <include name="**/*Bean.java" />
                    <exclude name="**/*MBean.java" />
                </fileset>
                <!--fileset dir="${build.dir}/gen-test">
                    <include name="**/*Bean.java" />
                    <exclude name="**/*MBean.java" />
                </fileset-->
            </sources>
        </xdoclet-ejb>
    </target>

    <!-- =================================================================== -->
    <!-- run Xdoclet/Web for production Servlets                             -->
    <!-- =================================================================== -->
    <target name="test-webdoclet"
            depends="test-ejbdoclet, test-webdoclet-uptodatecheck,
                test-webdoclet-nodeps"/>
    <target name="test-webdoclet-uptodatecheck">
        <uptodate property="test-webdoclet.uptodate"
             targetfile="${build.dir}/test-deploymentdescriptors/web.xml" >
            <srcfiles dir="${base.dir}/test/java">
                <include name="**/*Servlet.java" />
            </srcfiles>
        </uptodate>
    </target>
    <target name="test-webdoclet-nodeps" unless="test-webdoclet.uptodate">
        <taskdef name="webdoclet"
             classname="xdoclet.modules.web.WebDocletTask">
            <classpath refid="default.classpath"/>
        </taskdef>
        <webdoclet destdir="${build.dir}" verbose="true">
            <fileset dir="${base.dir}/test/java">
                <include name="**/*Servlet.java" />
            </fileset>
            <deploymentdescriptor
             destdir="${build.dir}/test-deploymentdescriptors"
             validatexml="true"
             mergedir="${base.dir}/src/xml/xdoclet" />
        </webdoclet>
    </target>

    <target name="test-compile"
            depends="build, gen-test-classes, test-webdoclet, test-compile-nodeps"
            description="Compile JUnit tests"></target>
    <target name="test-compile-nodeps">
        <mkdir dir="${build.dir}/test-classes"/>
        <javac  destdir="${build.dir}/test-classes"
                deprecation="${build.debug}"
                debug="true"
                source="1.4">
            <src path="${base.dir}/test/java"/>
            <src path="${build.dir}/gen-test"/>
            <classpath>
                <pathelement path="${build.dir}/classes"/>
                <pathelement path="${build.dir}/test-classes"/>
                <path refid="test.classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="instrument" depends="test-compile, instrument-nodeps"
            description="Add jcoverage instrumentation"></target>
    <target name="instrument-nodeps" if="build.coverage">
        <taskdef resource="tasks.properties"
                 classpathref="default.classpath"/>
        <mkdir dir="${build.dir}/instrumented-classes" />
        <cobertura-instrument todir="${build.dir}/instrumented-classes">
            <ignore regex="org.apache.log4j.*"/>
            <fileset dir="${build.dir}">
                <include name="classes/**/*.class"/>
                <exclude name="classes/**/jaxb/**/*.class"/>
                <include name="test-classes/**/*.class"/>
                <exclude name="test-classes/**/jaxb/**/*.class"/>
                <exclude name="test-classes/**/org/jcoderz/commons/LogFormatterOutputTest.class"/>
            </fileset>
        </cobertura-instrument>
        <move file="${base.dir}/cobertura.ser"
            tofile="${build.dir}/instrumented-classes/cobertura.ser"/>
    </target>

   <!-- insert test data into database -->
    <target name="test-insert-data"
            depends="check-database-settings, test-insert-data-sql"/>
    <target name="test-insert-data-sql">
        <sql driver="oracle.jdbc.driver.OracleDriver"
                autocommit="true"
                onError="continue"
                url="${db.url}"
                password="${db.passwd}"
                userid="${db.user}"
                encoding="UTF-8">
            <classpath>
                <pathelement location="${oracleclient.jar}" />
            </classpath>
            <fileset dir="${base.dir}/test/sql">
                <include name="*_insert_data.sql" />
            </fileset>
            <fileset dir="${build.dir}/gen-sql">
                <include name="*_insert_data.sql" />
            </fileset>
        </sql>
    </target>

    <target name="test" depends="test-local, test-server"
            description="Run all JUnit test suites"/>
    <target name="test-nodeps" depends="test-local-nodeps"/>
    <target name="test-local"
            depends="test-compile, instrument, test-local-nodeps"
            description="Run all local JUnit test suites"/>
    <target name="test-local-nodeps" if="junit.present">
        <mkdir dir="${build.dir}/report/junit"/>
        <junit printsummary="yes" haltonfailure="no"
                dir="${base.dir}/build" fork="true" timeout="600000"
                forkmode="perBatch">
            <classpath refid="test.runtime.classpath"/>
            <sysproperty key="basedir" value="${base.dir}"/>
            <sysproperty key="java.util.logging.config.file"
                    value="${base.dir}/src/etc/fawkez-logging.properties"/>
            <sysproperty key="org.xml.sax.driver"
                    value="org.apache.xerces.parsers.SAXParser"/>
<!--                      value="org.apache.crimson.parser.XMLReaderImpl"/ -->
            <formatter type="brief" usefile="true"/>
            <formatter type="xml" usefile="true"/>
            <batchtest todir="${build.dir}/report/junit">
                <fileset dir="${base.dir}/test/java">
                    <include name="**/*Test.java"/>
                    <exclude name="**/*ServerTest.java"/>
                    <exclude name="**/*BeanTest.java"/>
                </fileset>
                <fileset dir="${build.dir}/gen-test">
                    <include name="**/*Test.java"/>
                    <exclude name="**/*ServerTest.java"/>
                    <exclude name="**/*BeanTest.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    <target name="test-single-local"
            depends="test-compile, instrument, test-single-local-nodeps"
            description="Run a single JUnit test suite"/>
    <target name="test-single-local-nodeps" if="testcase, junit.present">
        <mkdir dir="${build.dir}/report/junit"/>
        <junit printsummary="yes" haltonfailure="no"
                dir="${base.dir}/build" fork="true" timeout="60000"
                showoutput="true">
            <classpath refid="test.runtime.classpath"/>
            <sysproperty key="methods" value="${methods}"/>
            <sysproperty key="basedir" value="${base.dir}"/>
            <sysproperty key="java.util.logging.config.file"
                    value="${base.dir}/src/etc/fawkez-logging.properties"/>
            <sysproperty key="org.xml.sax.driver"
                    value="org.apache.xerces.parsers.SAXParser"/>
                    <!--value="org.apache.crimson.parser.XMLReaderImpl"/-->
            <formatter type="plain" usefile="false"/>
            <test name="${testcase}"/>
        </junit>
    </target>

   <!-- SERVER TESTS -->
    <target name="test-server"
            depends="test-compile, instrument, check-database-settings, test-insert-data, test-server-nodeps"
            description="Run all server JUnit test suites (w/ running server)"/>
    <target name="test-server-nodeps"
            depends="check-database-settings, bea-set-properties"
            if="junit.present">
        <mkdir dir="${build.dir}/report/junit"/>
        <junit printsummary="yes" haltonfailure="no"
                dir="${base.dir}" fork="true" timeout="1200000"
                forkmode="perBatch">
            <classpath refid="test.runtime.classpath"/>
            <sysproperty key="basedir" value="${base.dir}"/>
            <sysproperty key="java.util.logging.config.file"
                    value="${base.dir}/src/etc/fawkez-logging.properties"/>
            <sysproperty key="java.naming.factory.initial"
                    value="${initialcontext.factory.bea}"/>
            <sysproperty key="java.naming.provider.url" value="${bea.url}"/>
            <sysproperty key="DB_HOST" value="${db.host}"/>
            <sysproperty key="DB_DOMAIN" value="${db.domain}"/>
            <sysproperty key="DB_PORT" value="${db.port}"/>
            <sysproperty key="DB_USER" value="${db.user}"/>
            <sysproperty key="DB_PASSWD" value="${db.passwd}"/>
            <sysproperty key="DB_SID" value="${db.sid}"/>
            <sysproperty key="DB_URL_THICK" value="jdbc:oracle:oci8:@${db.connect_string}"/>
            <sysproperty key="SRV_HOSTNAME" value="${env.SRV_HOSTNAME}"/>
            <sysproperty key="SRV_HTTP_PORT" value="${env.SRV_HTTP_PORT}"/>
            <sysproperty key="java.security.auth.login.config"
                    value="jar:file:${build.dir}/fawkez.jar!/app_jaas.config"/>
            <formatter type="brief" usefile="true"/>
            <formatter type="xml" usefile="true"/>
            <batchtest todir="${build.dir}/report/junit">
                <fileset dir="${base.dir}/test/java">
                    <include name="**/*ServerTest.java"/>
                    <include name="**/*BeanTest.java"/>
                </fileset>
            </batchtest>
            <batchtest todir="${build.dir}/report/junit">
                <fileset dir="${base.dir}/build/gen-test">
                    <include name="**/*ServerTest.java"/>
                    <include name="**/*BeanTest.java"/>
                </fileset>
            </batchtest>
            <batchtest todir="${build.dir}/report/junit">
                <fileset dir="${base.dir}/test/java">
                </fileset>
            </batchtest>
        </junit>
        <echo message="Find detailed junit results at ${build.dir}/report/junit."
                level="info"/>
    </target>

   <!-- SINGLE SERVER TESTS -->
    <target name="test-single-server"
            depends="test-testcase-property-set, test-compile, instrument, test-single-server-nodeps"
            description="Run all single server JUnit test (w/ running server)"/>
    <target name="test-testcase-property-set" unless="testcase">
        <fail message="missing testcase property">
+-----------------------------------------------------------------+
! You must set the property 'testcase' for the requested target.  !
!                                                                 !
! For example:                                                    !
!    $ ant -Dtestcase=package.FooTest test-single-local           |
! or                                                              !
!    $ ant -Dtestcase=package.FooServerTest test-single-server    |
! or                                                              !
!    $ ant -Dtestcase=package.FooBeanTest test-single-server      !
+-----------------------------------------------------------------+
      </fail>
    </target>
    <target name="test-single-server-nodeps"
            depends="bea-set-properties" if="testcase, junit.present">
        <junit printsummary="yes" haltonfailure="yes"
                dir="${base.dir}" fork="true" timeout="1200000">
            <classpath refid="test.runtime.classpath"/>
            <sysproperty key="basedir" value="${base.dir}"/>
            <sysproperty key="java.naming.factory.initial"
                    value="${initialcontext.factory.bea}"/>
            <sysproperty key="java.naming.provider.url" value="${bea.url}"/>
            <sysproperty key="DB_HOST" value="${db.host}"/>
            <sysproperty key="DB_DOMAIN" value="${db.domain}"/>
            <sysproperty key="DB_PORT" value="${db.port}"/>
            <sysproperty key="DB_USER" value="${db.user}"/>
            <sysproperty key="DB_PASSWD" value="${db.passwd}"/>
            <sysproperty key="DB_SID" value="${db.sid}"/>
            <sysproperty key="DB_URL_THICK" value="jdbc:oracle:oci8:@${db.connect_string}"/>
            <sysproperty key="methods" value="${methods}"/>
            <formatter type="plain" usefile="false"/>
            <test name="${testcase}"/>
        </junit>
    </target>

   <!-- PUBLIC: JUnit HTML report -->
    <target name="test-report" depends="test, test-report-nodeps"/>
    <target name="test-report-nodeps">
        <mkdir dir="${build.dir}/doc/junit"/>
        <junitreport todir="${build.dir}/report/junit">
            <fileset dir="${build.dir}/report/junit">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames"
                    styledir="${base.dir}/config"
                    todir="${build.dir}/doc/junit"/>
        </junitreport>
      <!-- Remove properties from the report xml -->
        <xslt basedir="${base.dir}"
                in="${build.dir}/report/junit/TESTS-TestSuites.xml"
                out="${build.dir}/report/junit/TESTS-TestSuites.xml.tmp"
                style="${base.dir}/config/filter-test-properties.xsl"></xslt>
        <move file="${build.dir}/report/junit/TESTS-TestSuites.xml.tmp"
                toFile="${build.dir}/report/junit/TESTS-TestSuites.xml"/>
        <echo level="info"
            message="JUnit Report available at ${build.dir}/doc/junit"/>
    </target>

    <target name="gen-test-classes">
      <taskdef name="simple-type-generator"
        classname="org.jcoderz.commons.taskdefs.SimpleTypeGenerator">
        <classpath>
          <pathelement location="${build.dir}/classes"/>
          <path refid="default.classpath"/>
        </classpath>
      </taskdef>
      <simple-type-generator in="${base.dir}/test/xml/simple-types.xml"
              out="${build.dir}/simple-types.log"
              destDir="${build.dir}/gen-test"
              failonerror="true"
              force="true"/>
      <simple-type-generator in="${base.dir}/test/xml/simple-types.xml"
              out="${build.dir}/simple-types.log"
              destDir="${build.dir}/gen-test"
              failonerror="true"
              force="true"/>
      <taskdef name="log-message-generator"
               classname="org.jcoderz.commons.taskdefs.LogMessageGenerator">
          <classpath>
            <pathelement location="${build.dir}/classes"/>
            <path refid="default.classpath"/>
          </classpath>
      </taskdef>
      <log-message-generator
        in="${base.dir}/test/xml/app-info-test.xml"
        out="${build.dir}/app-info-test-log-message-info.out"
        destDir="${build.dir}/gen-test"
        application="TCS"
        failonerror="true"
        force="true"/>
    </target>


   <!-- Tests the execution of some ant tasks provided by this project -->
    <target name="test-ant-tasks">
        <taskdef name="log-message-generator"
                classname="org.jcoderz.commons.taskdefs.LogMessageGenerator">
            <classpath>
                <pathelement location="${build.dir}"/>
            </classpath>
        </taskdef>
        <taskdef name="simple-type-generator"
                classname="orz.jcoderz.commons.taskdefs.SimpleTypeGenerator">
            <classpath>
                <pathelement location="${build.dir}"/>
            </classpath>
        </taskdef>
        <taskdef name="jsf-converter-generator"
                classname="org.jcoderz.commons.taskdefs.JsfConverterGenerator">
            <classpath>
                <pathelement location="${build.dir}"/>
            </classpath>
        </taskdef>
        <log-message-generator in="${base.dir}/test/xml/log-message-info.xml"
                out="${build.dir}/test-log-message-info.log"
                destDir="${build.dir}/test"
                application="Fawkez"
                failonerror="true"
                force="true"/>
        <simple-type-generator in="${base.dir}/test/xml/simple-types.xml"
                out="${build.dir}/simple-types.log"
                destDir="${build.dir}/test"
                failonerror="true"
                force="true"/>
        <jsf-converter-generator in="${base.dir}/test/xml/jsf-converters.xml"
                out="${build.dir}/jsf-converters.log"
                destDir="${build.dir}/test"
                failonerror="true"
                force="true"/>
    </target>


  <!-- Test report encoding support -->
   <!-- The ruleset files -->
   <property name="pmd.rules" value="${base.dir}/config/jcoderz-pmd.xml"/>
   <property name="checkstyle.rules" value="${base.dir}/config/jcoderz-checkstyle.xml" />
   <property name="findbugs.rules" value="${base.dir}/config/jcoderz-findbugs.xml" />
   <property name="filter.rules" value="${base.dir}/config/jcoderz-report-filter.xsl" />



  <target name="report-test">
        <!-- This is the classpath used by the JcReportAntTask -->
        <path id="jcreport.classpath">
           <pathelement path="${base.dir}/build/classes"/>
           <fileset dir="${base.dir}/lib">
              <include name="default/jaxb/*.jar"/>
              <include name="default/chart2d/*.jar"/>
           </fileset>
        </path>
        <taskdef name="jcreport"
                 classname="org.jcoderz.phoenix.report.JcReportAntTask">
           <classpath refid="jcreport.classpath" />
        </taskdef>

        <!-- This classpath is used by the checkstyle process -->
        <path id="checkstyle.classpath">
           <fileset dir="${base.dir}/lib">
              <include name="default/antlr/*.jar"/>
              <include name="default/checkstyle/*.jar"/>
              <include name="default/commons-beanutils/*.jar"/>
              <include name="default/commons-beanutils-core/*.jar"/>
              <include name="default/commons-cli/*.jar"/>
              <include name="default/commons-logging/*.jar"/>
           </fileset>
        </path>
        <!-- This classpath is used by the pmd and cpd process -->
        <path id="pmd.classpath">
           <fileset dir="${base.dir}/lib">
              <include name="default/pmd/*.jar"/>
              <include name="default/asm*/*.jar"/>
              <include name="default/backport-util-concurrent/*.jar"/>
              <include name="default/jaxen/*.jar"/>
              <include name="default/oro/*.jar"/>
           </fileset>
        </path>
        <!-- This classpath is used by the findbugs process -->
        <path id="findbugs.classpath">
           <fileset dir="${base.dir}/lib">
              <include name="default/findbugs/*.jar"/>
              <include name="default/asm*/*.jar"/>
              <include name="default/jaxen/*.jar"/>
              <exclude name="**/coreplugin.jar"/>
              <exclude name="**/fb-contrib.jar"/>
           </fileset>
        </path>
        <path id="findbugs.plugins">
            <path location="${base.dir}/lib/default/findbugs/coreplugin.jar"/>
            <path location="${base.dir}/lib/default/fb-contrib/fb-contrib.jar"/>
        </path>
        <!-- This is the auxiliary classpath used by findbugs -->
        <path id="findbugs.aux.classpath">
           <path location="${base.dir}/build/classes"/>
           <path location="${env.JAVA_HOME}/lib/tools.jar"/>
           <fileset dir="${base.dir}/lib">
              <include name="default/**/*.jar"/>
           </fileset>
        </path>

        <delete dir="${build.dir}/report-test"/>
          <property name="utf8-base.dir"
            location="${build.dir}/report-test/utf8"/>
      <property name="utf8-src.dir"
        location="${base.dir}/test/charset/java-utf8"/>
          <property name="utf8-class.dir"
            location="${utf8-base.dir}/classes"/>
      <mkdir dir="${utf8-class.dir}"/>
      <javac encoding="UTF-8"
           srcdir="${utf8-src.dir}"
           destdir="${utf8-class.dir}"/>
        <jcreport name="fawkez"
                  dest="${utf8-base.dir}/doc/findings-report"
                  wikibase="http://www.jcoderz.org/fawkez/wiki/jcreport:"
                  webrcsbase="http://www.jcoderz.org/fawkez/browser/trunk"
                  webrcssuffix=""
                  packagebase="org.jcoderz"
                  projectbase="${base.dir}"
                  tempfolder="${utf8-base.dir}/tmp"
                  debug="false"
                  encoding="utf-8"
                  cpus="0"> <!-- Increase to speed up -->
           <classpath refid="jcreport.classpath"/>
           <reports>
              <report name="fawkez-test"
                      level="prod"
                      sourcepath="${utf8-src.dir}"
                      classpath="${utf8-class.dir}">
              </report>
           </reports>
           <tools>
              <pmd config="${pmd.rules}"
                   targetjdk="1.4">
                 <classpath refid="pmd.classpath"/>
              </pmd>
              <cpd minimumtokens="100">
                 <classpath refid="pmd.classpath"/>
              </cpd>
             <!-- Could not disable UnreadFields cause further dependencies -->
             <findbugs maxheap="256" >
                 <classpath refid="findbugs.classpath"/>
                 <auxclasspath refid="findbugs.aux.classpath"/>
                 <pluginlist refid="findbugs.plugins"/>
              </findbugs>
              <checkstyle config="${checkstyle.rules}">
                 <classpath refid="checkstyle.classpath" />
              </checkstyle>
           </tools>
        </jcreport>

        <property name="cp500-base.dir"
          location="${build.dir}/report-test/cp500"/>
        <property name="cp500-src.dir"
          location="${base.dir}/test/charset/java-cp500"/>
        <property name="cp500-class.dir"
          location="${cp500-base.dir}/classes"/>
        <mkdir dir="${cp500-class.dir}"/>
        <javac encoding="cp500"
             srcdir="${cp500-src.dir}"
             destdir="${cp500-class.dir}"/>
        <jcreport name="fawkez"
                  dest="${cp500-base.dir}/doc/findings-report"
                  wikibase="http://www.jcoderz.org/fawkez/wiki/jcreport:"
                  webrcsbase="http://www.jcoderz.org/fawkez/browser/trunk"
                  webrcssuffix=""
                  packagebase="org.jcoderz"
                  projectbase="${base.dir}"
                  tempfolder="${cp500-base.dir}/tmp"
                  debug="false"
                  encoding="cp500"
                  cpus="0"> <!-- Increase to speed up -->
           <classpath refid="jcreport.classpath"/>
           <reports>
              <report name="fawkez-test"
                      level="prod"
                      sourcepath="${cp500-src.dir}"
                      classpath="${cp500-class.dir}">
              </report>
           </reports>
           <tools>
              <pmd config="${pmd.rules}" targetjdk="1.4">
                 <classpath refid="pmd.classpath"/>
              </pmd>
              <cpd minimumtokens="100">
                 <classpath refid="pmd.classpath"/>
              </cpd>
             <findbugs>
                 <classpath refid="findbugs.classpath"/>
                 <auxclasspath refid="findbugs.aux.classpath"/>
                 <pluginlist refid="findbugs.plugins"/>
              </findbugs>
              <checkstyle config="${checkstyle.rules}">
                 <classpath refid="checkstyle.classpath" />
              </checkstyle>
           </tools>
        </jcreport>

  </target>

</project>
