<!-- =============================================
     Connector (file/http)
     ============================================= -->
<group
   id="6"
   name="Connector"
   short-name="CON"
   package="org.jcoderz.commons.connector"
   base-exception="org.jcoderz.commons.BaseException"
   base-runtime-exception="org.jcoderz.commons.BaseRuntimeException"
   service="NONE">
   <message
      id="1"
      name="CONNECTION_REQUEST_FAILED"
      level="SEVERE"
      base-exception="org.jcoderz.commons.connector.ConnectorException"
      business-impact="UNDEFINED"
      category="TECHNICAL">
      <text>
         Failure whilst sending a request to {org.jcoderz.commons.types.Url:url}.
      </text>
      <solution>
         Review the nested exception(s) to determine the problem that led
         to the error condition.
      </solution>
   </message>
   <message
      id="2"
      name="CONNECTION_RESPONSE_FAILED"
      level="SEVERE"
      base-exception="org.jcoderz.commons.connector.ConnectorException"
      business-impact="UNDEFINED"
      category="TECHNICAL">
      <text>
         Failure whilst receiving a response from {org.jcoderz.commons.types.Url:url}.
      </text>
      <solution>
         Review the nested exception(s) to determine the problem that led
         to the error condition.
      </solution>
   </message>
   <message
      id="3"
      name="CONNECTION_TIMEOUT_ERROR"
      level="SEVERE"
      base-exception="org.jcoderz.commons.connector.ConnectorException"
      business-impact="UNDEFINED"
      category="TECHNICAL">
      <text>
         Connection timeout whilst waiting for response from {org.jcoderz.commons.types.Url:url}.
         Previous failures are {String:failures}.
      </text>
      <solution>
         Review the nested exception(s) to determine the problem that led
         to the error condition.
      </solution>
   </message>
   <message
      id="4"
      name="CREATING_CONNECTOR_FAILED"
      level="SEVERE"
      base-exception="org.jcoderz.commons.connector.ConnectionRequestFailedException"
      business-impact="UNDEFINED"
      category="TECHNICAL">
      <text>
         Creating a container managed http connection failed to {org.jcoderz.commons.types.Url:url}.
      </text>
      <solution>
         Review the nested exception(s) to determine the problem that led
         to the error condition.
      </solution>
   </message>
   <message
      id="5"
      name="INITIALIZING_SSL_FAILED"
      level="SEVERE"
      category="SECURITY"
      base-exception="org.jcoderz.commons.BaseRuntimeException">
      <text>
         Initializing SSL for outgoing connections failed with reason {String:reason}.
      </text>
      <solution>
         Check the keystore in use. If appropriate set a new ssl keystore for the
         system via Administration Tool command 'setSslCertificateStore'.
      </solution>
   </message>

   <configEntry furtherChangeRestricted="false">
      <key>sslKeyAlias</key>
      <description>
         The name of the key used for SSL connections
         established by the http connector.
         This key is stored in the keystore defined by the
         Signature Service as is located in the table SIG_KEYSTORE.
      </description>
      <type>String</type>
      <serializeMethod></serializeMethod>
      <deserializeMethod></deserializeMethod>
      <defaultValue>ssl</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="false">
      <key>sslKeyAliasPassword</key>
      <description>
         The password of the key used for SSL connections
         established by the connector.
         See also configuration entry "sslKeyAlias".
      </description>
      <type>String</type>
      <serializeMethod></serializeMethod>
      <deserializeMethod></deserializeMethod>
      <defaultValue>sslssl</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="false">
      <key>amountOfTriesForwardingRequest</key>
      <description>
         The number of attempts the http connector performs to connect
         the specified target system.
         This value is valid for all connector retry settings.
         If this value is changed it will be taken into account for new
         connections (not pooled connections).
      </description>
      <type>int</type>
      <serializeMethod>toString</serializeMethod>
      <deserializeMethod>valueOf</deserializeMethod>
      <defaultValue>3</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="false">
      <key>connectTimeoutInMilliSeconds</key>
      <description>
         The timeout for creating connections to target systems used by
         the http connector in milliseconds.
         If this value is changed it will be taken into account for new
         connections (not pooled connections).
         See also T-NR-P-104.
         Check also readTimeoutInMilliSeconds if you
         change this value.
      </description>
      <type>int</type>
      <serializeMethod></serializeMethod>
      <deserializeMethod></deserializeMethod>
      <defaultValue>6000</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="false">
      <key>readTimeoutInMilliSeconds</key>
      <description>
         The timeout for reading response messages from target systems used
         by the http connector in milliseconds.
         If this value is changed it will be taken into account for new
         connections (not pooled connections).
         See also T-NR-P-104.
         Check also connectTimeoutInMilliSeconds if you change this value.
      </description>
      <type>int</type>
      <serializeMethod></serializeMethod>
      <deserializeMethod></deserializeMethod>
      <defaultValue>6000</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="false">
      <key>connectionErrorRetryDelayInMilliSeconds</key>
      <description>
         The delay in milliseconds before retry getting managed connection
        after a ResourceException whilst getConnection.
      </description>
      <type>int</type>
      <serializeMethod>toString</serializeMethod>
      <deserializeMethod>valueOf</deserializeMethod>
      <defaultValue>1000</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="false">
      <key>httpClientErrorResendDelayInMilliSeconds</key>
      <description>
         The delay in milliseconds before resending request
         after an http client error (4xx).
         See also httpClientErrorResendFlag and
         amountOfTriesForwardingRequest.
         Keep in mind that the requesting (client) system also has a
         timeout, waiting for the answer. The value for this timeout
         currently defaults to 6 seconds.
         If this value is changed it will be taken into account for new
         connections (not pooled connections).
      </description>
      <type>int</type>
      <serializeMethod>toString</serializeMethod>
      <deserializeMethod>valueOf</deserializeMethod>
      <defaultValue>1000</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="false">
      <key>httpServerErrorResendDelayInMilliSeconds</key>
      <description>
         The delay in milliseconds before resending request
         after an http server error (5xx).
         The delay is to give the target system the chance to recover from
         an error situation.
         See also httpServerErrorResendFlag and
         amountOfTriesForwardingRequest.
         Keep in mind that the requesting (client) system also has a
         timeout, waiting for the answer. The value for this timeout
         currently defaults to 6 seconds.
         If this value is changed it will be taken into account for new
         connections (not pooled connections).
      </description>
      <type>int</type>
      <serializeMethod>toString</serializeMethod>
      <deserializeMethod>valueOf</deserializeMethod>
      <defaultValue>1000</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="false">
      <key>httpReadTimeoutErrorResendDelayInMilliSeconds</key>
      <description>
         The delay in milliseconds before resending request
         after a timeout reading the response.
         The delay is to give the target system the chance to recover from
         an error situation.
         See also httpReadTimeoutErrorResendFlag and
         amountOfTriesForwardingRequest.
         Keep in mind that the requesting (client) system also has a
         timeout, waiting for the answer. The value for this timeout
         currently defaults to 6 seconds.
         If this value is changed it will be taken into account for new
         connections (not pooled connections).
      </description>
      <type>int</type>
      <serializeMethod>toString</serializeMethod>
      <deserializeMethod>valueOf</deserializeMethod>
      <defaultValue>1000</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="false">
      <key>httpClientErrorResendFlag</key>
      <description>
         Flag indicating resend of message after http client error (4xx).
         See also httpClientErrorResendDelayInMilliSeconds and
         amountOfTriesForwardingRequest.
         If this value is changed it will be taken into account for new
         connections (not pooled connections).
      </description>
      <type>boolean</type>
      <serializeMethod></serializeMethod>
      <deserializeMethod></deserializeMethod>
      <defaultValue>false</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="false">
      <key>httpServerErrorResendFlag</key>
      <description>
         Flag indicating resend of message after http server error (5xx).
         See also httpServerErrorResendDelayInMilliSeconds and
         amountOfTriesForwardingRequest.
         If this value is changed it will be taken into account for new
         connections (not pooled connections).
      </description>
      <type>boolean</type>
      <serializeMethod></serializeMethod>
      <deserializeMethod></deserializeMethod>
      <defaultValue>true</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="false">
      <key>httpReadTimeoutErrorResendFlag</key>
      <description>
         Flag indicating resend of message after timeout reading
         the response.
         See also httpReadTimeoutErrorResendDelayInMilliSeconds and
         amountOfTriesForwardingRequest.
         If this value is changed it will be taken into account for new
         connections (not pooled connections).
      </description>
      <type>boolean</type>
      <serializeMethod></serializeMethod>
      <deserializeMethod></deserializeMethod>
      <defaultValue>true</defaultValue>
      <roles>Admin</roles>
   </configEntry>
   <configEntry furtherChangeRestricted="true">
      <key>fileTempDir</key>
      <description>
         The temporary-file directory to be used by the File System Connector.
      </description>
      <type>String</type>
      <serializeMethod></serializeMethod>
      <deserializeMethod></deserializeMethod>
      <defaultValue>/tmp</defaultValue>
      <roles>Admin</roles>
   </configEntry>

</group>
